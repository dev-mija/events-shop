{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-Slice\";\nconst initcart = {\n  items: [],\n  totalQuantity: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: initcart,\n  reducers: {\n    addItemCart(state, action) {\n      console.log(state.items);\n      const newItem = action.payload;\n      console.log(newItem);\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          title: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nexport const sendCartData = cartdata => {\n  return async dispatch => {\n    dispatch(uiActions.showNotifications({\n      status: \"pending\",\n      title: \"sending...\",\n      message: \"sending cart data!\"\n    }));\n    const sendRequest = async () => {\n      const reponse = await fetch(\"https://react-post-e93ae-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cartdata)\n      });\n      if (!reponse.ok) {\n        throw new Error(\"sending cart data failed\");\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotifications({\n        status: \"success\",\n        title: \"success...\",\n        message: \"sent cart data successfully!\"\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotifications({\n        status: \"error\",\n        title: \"error\",\n        message: \"sent cart data successfullyfailed!\"\n      }));\n    }\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","initcart","items","totalQuantity","cartSlice","name","initialState","reducers","addItemCart","state","action","console","log","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemCart","filter","sendCartData","cartdata","dispatch","showNotifications","status","message","sendRequest","reponse","fetch","method","body","JSON","stringify","ok","Error","error","cartActions","actions"],"sources":["C:/Users/sweet/newReact/Redux project/advancedproj/src/components/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { uiActions } from \"./ui-Slice\";\r\nconst initcart = {\r\n  items: [],\r\n  totalQuantity: 0,\r\n};\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: initcart,\r\n  reducers: {\r\n    addItemCart(state, action) {\r\n      console.log(state.items);\r\n      const newItem = action.payload;\r\n      console.log(newItem);\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      state.totalQuantity++;\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n          title: newItem.title,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n      }\r\n    },\r\n    removeItemCart(state, action) {\r\n      const id = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === id);\r\n      state.totalQuantity--;\r\n\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.id !== id);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const sendCartData = (cartdata) => {\r\n  return async (dispatch) => {\r\n    dispatch(\r\n      uiActions.showNotifications({\r\n        status: \"pending\",\r\n        title: \"sending...\",\r\n        message: \"sending cart data!\",\r\n      })\r\n    );\r\n\r\n    const sendRequest = async () => {\r\n      const reponse = await fetch(\r\n        \"https://react-post-e93ae-default-rtdb.firebaseio.com/cart.json\",\r\n        {\r\n          method: \"PUT\",\r\n          body: JSON.stringify(cartdata),\r\n        }\r\n      );\r\n      if (!reponse.ok) {\r\n        throw new Error(\"sending cart data failed\");\r\n      }\r\n    };\r\n    try {\r\n      await sendRequest();\r\n      dispatch(\r\n        uiActions.showNotifications({\r\n          status: \"success\",\r\n          title: \"success...\",\r\n          message: \"sent cart data successfully!\",\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotifications({\r\n          status: \"error\",\r\n          title: \"error\",\r\n          message: \"sent cart data successfullyfailed!\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}