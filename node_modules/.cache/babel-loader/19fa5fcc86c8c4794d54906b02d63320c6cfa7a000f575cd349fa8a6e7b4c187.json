{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";var initcart={changed:false,items:[],totalQuantity:0,totalAmount:0};var cartSlice=createSlice({name:\"cart\",initialState:initcart,reducers:{replaceCart:function replaceCart(state,action){state.totalQuantity=action.payload.totalQuantity;state.items=action.payload.items;},addItemCart:function addItemCart(state,action){state.changed=true;console.log(state.items);var newItem=action.payload;// console.log(newItem);\nvar existingItem=state.items.find(function(item){return item.id===newItem.id;});state.totalQuantity++;//state.totalAmount=state.totalAmount+newItem.price*existingItem.quantity;\nif(!existingItem){state.items.push({id:newItem.id,price:newItem.price,quantity:1,totalPrice:newItem.price,title:newItem.title});state.totalAmount=state.totalAmount+newItem.price;}else{existingItem.quantity++;existingItem.totalPrice=existingItem.totalPrice+newItem.price;state.totalAmount=state.totalAmount+existingItem.price;}},removeItemCart:function removeItemCart(state,action){var id=action.payload;var existingItem=state.items.find(function(item){return item.id===id;});state.totalQuantity--;state.changed=true;if(existingItem.quantity===1){state.items=state.items.filter(function(item){return item.id!==id;});state.totalAmount=state.totalAmount-existingItem.price;}else{existingItem.quantity--;existingItem.totalPrice=existingItem.totalPrice-existingItem.price;state.totalAmount=state.totalAmount-existingItem.price;}}}});export var cartActions=cartSlice.actions;export default cartSlice;","map":{"version":3,"names":["createSlice","initcart","changed","items","totalQuantity","totalAmount","cartSlice","name","initialState","reducers","replaceCart","state","action","payload","addItemCart","console","log","newItem","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemCart","filter","cartActions","actions"],"sources":["C:/Users/sweet/newReact/Redux project/advancedproj/src/components/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initcart = {\r\n  changed:false,\r\n  items: [],\r\n  totalQuantity: 0,\r\n  totalAmount:0\r\n};\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: initcart,\r\n  reducers: {\r\n    replaceCart(state, action) {\r\n      state.totalQuantity = action.payload.totalQuantity;\r\n      state.items = action.payload.items;\r\n    },\r\n    addItemCart(state, action) {\r\n      state.changed=true;\r\n       console.log(state.items);\r\n      const newItem = action.payload;\r\n      // console.log(newItem);\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      state.totalQuantity++;\r\n      //state.totalAmount=state.totalAmount+newItem.price*existingItem.quantity;\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n          title: newItem.title,\r\n        });\r\n        state.totalAmount=state.totalAmount+newItem.price\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n        state.totalAmount=state.totalAmount+existingItem.price\r\n      }\r\n    },\r\n    removeItemCart(state, action) {\r\n      const id = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === id);\r\n      state.totalQuantity--;\r\n      state.changed=true;\r\n\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.id !== id);\r\n        state.totalAmount=state.totalAmount-existingItem.price\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n        state.totalAmount=state.totalAmount-existingItem.price\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}