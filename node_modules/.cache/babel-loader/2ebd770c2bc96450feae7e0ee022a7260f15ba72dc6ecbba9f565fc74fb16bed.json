{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initcart = {\n  items: [],\n  totalQuantity: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: initcart,\n  reducers: {\n    addItemCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      if (!existingItem) {\n        state.items.push({\n          itemID: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          title: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      if (existingItem.quantity === 1) {\n        state.items.filter(item => {\n          item.id !== id;\n        });\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","initcart","items","totalQuantity","cartSlice","name","initialState","reducers","addItemCart","state","action","newItem","payload","existingItem","find","item","id","push","itemID","price","quantity","totalPrice","title","removeItemCart","filter","cartActions","actions"],"sources":["C:/Users/sweet/newReact/Redux project/advancedproj/src/components/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nconst initcart = {\r\n  items: [],\r\n  totalQuantity: 0,\r\n};\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: initcart,\r\n  reducers: {\r\n    addItemCart(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          itemID: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n          title:newItem.title\r\n        })\r\n      }else{existingItem.quantity++;existingItem.totalPrice=existingItem.totalPrice+newItem.price\r\n      }\r\n    },\r\n    removeItemCart(state, action) {\r\n    const id = action.payload;\r\n    const existingItem = state.items.find((item) => item.id === id);\r\n   \r\n    if(existingItem.quantity===1){\r\n        state.items.filter((item)=>{item.id!==id})\r\n    }else{\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice=existingItem.totalPrice-existingItem.price;\r\n    }\r\n\r\n\r\n    }\r\n  },\r\n});\r\nexport const cartActions=cartSlice.actions;\r\nexport default cartSlice;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,MAAMC,QAAQ,GAAG;EACfC,KAAK,EAAE,EAAE;EACTC,aAAa,EAAE;AACjB,CAAC;AACD,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC5BK,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEL,QAAQ;EACtBM,QAAQ,EAAE;IACRC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACzB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACP,KAAK,CAACY,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACvE,IAAI,CAACH,YAAY,EAAE;QACjBJ,KAAK,CAACP,KAAK,CAACe,IAAI,CAAC;UACfC,MAAM,EAAEP,OAAO,CAACK,EAAE;UAClBG,KAAK,EAAER,OAAO,CAACQ,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAEV,OAAO,CAACQ,KAAK;UACzBG,KAAK,EAACX,OAAO,CAACW;QAChB,CAAC,CAAC;MACJ,CAAC,MAAI;QAACT,YAAY,CAACO,QAAQ,EAAE;QAACP,YAAY,CAACQ,UAAU,GAACR,YAAY,CAACQ,UAAU,GAACV,OAAO,CAACQ,KAAK;MAC3F;IACF,CAAC;IACDI,cAAcA,CAACd,KAAK,EAAEC,MAAM,EAAE;MAC9B,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACzB,MAAMC,YAAY,GAAGJ,KAAK,CAACP,KAAK,CAACY,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAE/D,IAAGH,YAAY,CAACO,QAAQ,KAAG,CAAC,EAAC;QACzBX,KAAK,CAACP,KAAK,CAACsB,MAAM,CAAET,IAAI,IAAG;UAACA,IAAI,CAACC,EAAE,KAAGA,EAAE;QAAA,CAAC,CAAC;MAC9C,CAAC,MAAI;QACDH,YAAY,CAACO,QAAQ,EAAE;QACvBP,YAAY,CAACQ,UAAU,GAACR,YAAY,CAACQ,UAAU,GAACR,YAAY,CAACM,KAAK;MACtE;IAGA;EACF;AACF,CAAC,CAAC;AACF,OAAO,MAAMM,WAAW,GAACrB,SAAS,CAACsB,OAAO;AAC1C,eAAetB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}