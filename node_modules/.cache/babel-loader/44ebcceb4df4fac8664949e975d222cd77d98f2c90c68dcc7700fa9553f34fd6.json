{"ast":null,"code":"import { uiActions } from \"./ui-Slice\";\nimport { cartActions } from \"./cart-slice\";\nexport const getCartData = () => {\n  return async dispatch => {\n    const getRequest = async () => {\n      const response = await fetch(\"https://react-post-e93ae-default-rtdb.firebaseio.com/cart.json\");\n      if (!response.ok) {\n        throw new Error(\"fetching cart data failed\");\n      }\n      const data = await response.JSON();\n      return data;\n    };\n    try {\n      await getRequest();\n      dispatch(cartActions.replaceCart());\n    } catch (error) {\n      dispatch(uiActions.showNotifications({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Fetching cart data failed!\"\n      }));\n    }\n  };\n};\nexport const sendCartData = cartdata => {\n  return async dispatch => {\n    dispatch(uiActions.showNotifications({\n      status: \"pending\",\n      title: \"sending...\",\n      message: \"sending cart data!\"\n    }));\n    const sendRequest = async () => {\n      const reponse = await fetch(\"https://react-post-e93ae-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cartdata)\n      });\n      if (!reponse.ok) {\n        throw new Error(\"sending cart data failed\");\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotifications({\n        status: \"success\",\n        title: \"success...\",\n        message: \"sent cart data successfully!\"\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotifications({\n        status: \"error\",\n        title: \"error\",\n        message: \"sent cart data successfullyfailed!\"\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","cartActions","getCartData","dispatch","getRequest","response","fetch","ok","Error","data","JSON","replaceCart","error","showNotifications","status","title","message","sendCartData","cartdata","sendRequest","reponse","method","body","stringify"],"sources":["C:/Users/sweet/newReact/Redux project/advancedproj/src/components/store/cart-actions.js"],"sourcesContent":["import { uiActions } from \"./ui-Slice\";\r\nimport { cartActions } from \"./cart-slice\";\r\n\r\nexport const getCartData = () => {\r\n  return async (dispatch) => {\r\n    const getRequest = async () => {\r\n      const response = await fetch(\r\n        \"https://react-post-e93ae-default-rtdb.firebaseio.com/cart.json\"\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"fetching cart data failed\");\r\n      }\r\n      const data = await response.JSON();\r\n      return data;\r\n    };\r\n    try {\r\n      await getRequest();\r\n      dispatch(cartActions.replaceCart());\r\n    } catch (error) \r\n      {\r\n        dispatch(\r\n          uiActions.showNotifications({\r\n            status: \"error\",\r\n            title: \"Error!\",\r\n            message: \"Fetching cart data failed!\",\r\n          })\r\n        );\r\n      }\r\n  };\r\n};\r\n\r\nexport const sendCartData = (cartdata) => {\r\n  return async (dispatch) => {\r\n    dispatch(\r\n      uiActions.showNotifications({\r\n        status: \"pending\",\r\n        title: \"sending...\",\r\n        message: \"sending cart data!\",\r\n      })\r\n    );\r\n\r\n    const sendRequest = async () => {\r\n      const reponse = await fetch(\r\n        \"https://react-post-e93ae-default-rtdb.firebaseio.com/cart.json\",\r\n        {\r\n          method: \"PUT\",\r\n          body: JSON.stringify(cartdata),\r\n        }\r\n      );\r\n      if (!reponse.ok) {\r\n        throw new Error(\"sending cart data failed\");\r\n      }\r\n    };\r\n    try {\r\n      await sendRequest();\r\n      dispatch(\r\n        uiActions.showNotifications({\r\n          status: \"success\",\r\n          title: \"success...\",\r\n          message: \"sent cart data successfully!\",\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        uiActions.showNotifications({\r\n          status: \"error\",\r\n          title: \"error\",\r\n          message: \"sent cart data successfullyfailed!\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AACtC,SAASC,WAAW,QAAQ,cAAc;AAE1C,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAC/B,OAAO,MAAOC,QAAQ,IAAK;IACzB,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAAgE,CACjE;MACD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;MAClC,OAAOD,IAAI;IACb,CAAC;IACD,IAAI;MACF,MAAML,UAAU,EAAE;MAClBD,QAAQ,CAACF,WAAW,CAACU,WAAW,EAAE,CAAC;IACrC,CAAC,CAAC,OAAOC,KAAK,EACZ;MACET,QAAQ,CACNH,SAAS,CAACa,iBAAiB,CAAC;QAC1BC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CAAC,CACH;IACH;EACJ,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,QAAQ,IAAK;EACxC,OAAO,MAAOf,QAAQ,IAAK;IACzBA,QAAQ,CACNH,SAAS,CAACa,iBAAiB,CAAC;MAC1BC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC,CAAC,CACH;IAED,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,OAAO,GAAG,MAAMd,KAAK,CACzB,gEAAgE,EAChE;QACEe,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEZ,IAAI,CAACa,SAAS,CAACL,QAAQ;MAC/B,CAAC,CACF;MACD,IAAI,CAACE,OAAO,CAACb,EAAE,EAAE;QACf,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;IACF,CAAC;IACD,IAAI;MACF,MAAMW,WAAW,EAAE;MACnBhB,QAAQ,CACNH,SAAS,CAACa,iBAAiB,CAAC;QAC1BC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,YAAY;QACnBC,OAAO,EAAE;MACX,CAAC,CAAC,CACH;IACH,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdT,QAAQ,CACNH,SAAS,CAACa,iBAAiB,CAAC;QAC1BC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,OAAO;QACdC,OAAO,EAAE;MACX,CAAC,CAAC,CACH;IACH;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}